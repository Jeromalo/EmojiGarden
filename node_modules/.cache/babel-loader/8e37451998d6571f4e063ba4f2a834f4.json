{"ast":null,"code":"var _jsxFileName = \"/home/bjerome/Bureau/Matrice/bjerome-emojis-garden/emojisgarden/src/component/Garden.js\";\nimport React, { useState } from \"react\";\nimport './Garden.css';\nexport default function Garden(props) {\n  let maGrille = [//0 //1 //2 //3 //4\n  ['', '', '', '', ''], //0\n  ['', '', '', '', ''], //1\n  ['', '', '', '', ''], //2\n  ['', '', '', '', ''], //3\n  ['', '', '', '', ''] //4\n  ];\n  const [grille, setGrille] = useState(maGrille); //ajouter Grille\n\n  const addGrille = () => {}; //supprimer Emoji\n\n\n  const handleRemoveEmoji = (i, j) => {\n    let copy = [...grille];\n    copy[i][j] = '';\n    setGrille(copy);\n  }; //ajouter Emoji\n\n\n  const addEmoji = () => {\n    let copy = [...grille];\n\n    boucle: for (let i = 0; i < copy.length; i++) {\n      //d√©clarer une variable \"boucle\" pour break\n      for (let j = 0; j < copy[i].length; j++) {\n        if (copy[i][j] === \"\") {\n          //aller chercher position index [i], [j]\n          copy[i][j] = \"üå±\";\n          setGrille(copy);\n          grow(i, j); //√©tablir des param√®tres i, j pour grow, qui seront des index dans la fonction.\n\n          break boucle;\n        }\n      }\n    }\n  }; //faire grandir Emoji\n\n\n  const grow = (i, j) => {\n    //cr√©er une const qui se d√©clenchera pour chaque emoji cr√©e dans le addEmoji\n    const timer = setTimeout(() => {\n      let copy = [...grille];\n\n      if (copy[i][j] === \"üå±\") {\n        copy[i][j] = \"üåø\";\n      }\n\n      setGrille(copy);\n      setTimeout(() => {\n        //inclure un setTimeout dans un setTimeout pour qu'il se d√©clenche √† la suite du 1er\n        let copy2 = [...grille]; //par s√©curit√©, d√©clarer nouvelle variable copy2\n\n        if (copy2[i][j] === \"üåø\") {\n          copy2[i][j] = \"üå≥\";\n        }\n\n        setGrille(copy2);\n      }, 2000);\n    }, 2000);\n  }; //my garden(s)\n\n\n  let Grilletoreturn = [[/*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex flex-column align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"garden mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, grille.map((row, i) => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 29\n      }\n    }, row.map((cell, j) => {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        key: j,\n        onClick: () => handleRemoveEmoji(i, j),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 44\n        }\n      }, cell);\n    }));\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary mt-5\",\n    onClick: addEmoji,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, \"Plant an emoji\"))][/*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex flex-column align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"garden mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, grille.map((row, i) => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 29\n      }\n    }, row.map((cell, j) => {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        key: j,\n        onClick: () => handleRemoveEmoji(i, j),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 44\n        }\n      }, cell);\n    }));\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary mt-5\",\n    onClick: addEmoji,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, \"Plant an emoji\"))]];\n  return Grilletoreturn;\n}","map":{"version":3,"sources":["/home/bjerome/Bureau/Matrice/bjerome-emojis-garden/emojisgarden/src/component/Garden.js"],"names":["React","useState","Garden","props","maGrille","grille","setGrille","addGrille","handleRemoveEmoji","i","j","copy","addEmoji","boucle","length","grow","timer","setTimeout","copy2","Grilletoreturn","map","row","cell"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport './Garden.css';\n\nexport default function Garden(props) {\n    let maGrille = [\n        //0 //1 //2 //3 //4\n        ['', '', '', '', ''], //0\n        ['', '', '', '', ''], //1\n        ['', '', '', '', ''], //2\n        ['', '', '', '', ''], //3\n        ['', '', '', '', ''] //4\n    ];\n\n    const [grille, setGrille] = useState(maGrille);\n\n    //ajouter Grille\n    const addGrille = () => {\n\n    }\n\n    //supprimer Emoji\n    const handleRemoveEmoji = (i, j) => {\n        let copy = [...grille]\n        copy[i][j] = ''\n        setGrille(copy)\n    }\n\n    //ajouter Emoji\n    const addEmoji = () => {\n        let copy = [...grille]\n        boucle: for (let i = 0; i < copy.length; i++) { //d√©clarer une variable \"boucle\" pour break\n            for (let j = 0; j < copy[i].length; j++) {\n                if (copy[i][j] === \"\") { //aller chercher position index [i], [j]\n                    copy[i][j] = \"üå±\";\n                    setGrille(copy)\n                    grow(i, j) //√©tablir des param√®tres i, j pour grow, qui seront des index dans la fonction.\n                    break boucle\n                }\n            }\n        }\n    }\n\n\n    //faire grandir Emoji\n    const grow = (i, j) => { //cr√©er une const qui se d√©clenchera pour chaque emoji cr√©e dans le addEmoji\n        const timer = setTimeout(() => {\n            let copy = [...grille]\n            if (copy[i][j] === \"üå±\") {\n                copy[i][j] = \"üåø\"\n            }\n            setGrille(copy)\n            setTimeout(() => { //inclure un setTimeout dans un setTimeout pour qu'il se d√©clenche √† la suite du 1er\n                let copy2 = [...grille] //par s√©curit√©, d√©clarer nouvelle variable copy2\n                if (copy2[i][j] === \"üåø\") {\n                    copy2[i][j] = \"üå≥\"\n                }\n                setGrille(copy2)\n            }, 2000);\n        }, 2000);\n    };\n\n\n    //my garden(s)\n    let Grilletoreturn =\n        [\n        [<div className=\"d-flex flex-column align-items-center\">\n            <table className=\"garden mt-5\">\n                <tbody>\n                    {grille.map((row, i) => {\n                        return (\n                            <tr key={i}>\n                                {row.map((cell, j) => {\n                                    return <td key={j} onClick={() => handleRemoveEmoji(i, j)}>{cell}</td>;\n                                })}\n                            </tr>)\n                    })}\n                </tbody>\n            </table>\n            <button type=\"submit\" className=\"btn btn-primary mt-5\" onClick={addEmoji}>Plant an emoji</button>\n        </div>]\n            [<div className=\"d-flex flex-column align-items-center\">\n            <table className=\"garden mt-5\">\n                <tbody>\n                    {grille.map((row, i) => {\n                        return (\n                            <tr key={i}>\n                                {row.map((cell, j) => {\n                                    return <td key={j} onClick={() => handleRemoveEmoji(i, j)}>{cell}</td>;\n                                })}\n                            </tr>)\n                    })}\n                </tbody>\n            </table>\n            <button type=\"submit\" className=\"btn btn-primary mt-5\" onClick={addEmoji}>Plant an emoji</button>\n        </div>]\n        ]\n    \n    return Grilletoreturn\n}\n"]},"metadata":{},"sourceType":"module"}