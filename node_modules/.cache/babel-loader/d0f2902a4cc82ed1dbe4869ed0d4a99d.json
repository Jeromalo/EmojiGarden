{"ast":null,"code":"var _jsxFileName = \"/home/bjerome/Bureau/Matrice/bjerome-emojis-garden/emojisgarden/src/component/Garden.js\";\nimport React, { useState, useEffect } from \"react\";\nimport './Garden.css';\nexport default function Garden(props) {\n  let maGrille = [//0 //1 //2 //3 //4\n  ['', '', '', '', ''], //0\n  ['', '', '', '', ''], //1\n  ['', '', '', '', ''], //2\n  ['', '', '', '', ''], //3\n  ['', '', '', '', ''] //4\n  ];\n  const [grille, setGrille] = useState(maGrille); //supprimer Emoji\n\n  const handleRemoveEmoji = (i, j) => {\n    let copy = [...grille];\n    copy[i][j] = '';\n    setGrille(copy);\n  }; //ajouter Emoji\n\n\n  const addEmoji = () => {\n    let copy = [...grille];\n    let condition = false;\n\n    for (let i = 0; i < copy.length; i++) {\n      for (let j = 0; j < copy[i].length; j++) {\n        if (copy[i][j] === \"\") {\n          condition = true;\n          copy[i][j] = \"ðŸŒ±\";\n          break;\n        }\n      }\n\n      if (condition) {\n        break;\n      }\n    }\n\n    setGrille(copy);\n  }; //faire grandir Emoji\n\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      // let copy = [...grille]\n      for (let i = 0; i < copy.length; i++) {\n        for (let j = 0; j < copy[i].length; j++) {\n          if (copy[i][j] === \"ðŸŒ±\") {\n            copy[i][j] = \"ðŸŒ¿\";\n          }\n        }\n      }\n\n      setGrille(copy);\n    }, 5000);\n  }, [addEmoji]); //my garden\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex flex-column align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"garden mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, grille.map((row, i) => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 29\n      }\n    }, row.map((cell, j) => {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        key: j,\n        onClick: () => handleRemoveEmoji(i, j),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 44\n        }\n      }, cell);\n    }));\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary mt-5\",\n    onClick: addEmoji,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, \"Plant an emoji\"));\n}","map":{"version":3,"sources":["/home/bjerome/Bureau/Matrice/bjerome-emojis-garden/emojisgarden/src/component/Garden.js"],"names":["React","useState","useEffect","Garden","props","maGrille","grille","setGrille","handleRemoveEmoji","i","j","copy","addEmoji","condition","length","timer","setTimeout","map","row","cell"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport './Garden.css';\n\nexport default function Garden(props) {\n    let maGrille = [\n        //0 //1 //2 //3 //4\n        ['', '', '', '', ''], //0\n        ['', '', '', '', ''], //1\n        ['', '', '', '', ''], //2\n        ['', '', '', '', ''], //3\n        ['', '', '', '', ''] //4\n    ];\n\n    const [grille, setGrille] = useState(maGrille);\n\n    //supprimer Emoji\n    const handleRemoveEmoji = (i, j) => {\n        let copy = [...grille]\n        copy[i][j] = ''\n        setGrille(copy)\n    }\n\n    //ajouter Emoji\n    const addEmoji = () => {\n        let copy = [...grille]\n        let condition = false\n        for (let i = 0; i < copy.length; i++) {\n            for (let j = 0; j < copy[i].length; j++) {\n                if (copy[i][j] === \"\") {\n                    condition = true;\n                    copy[i][j] = \"ðŸŒ±\";\n                    break\n                }\n            }\n            if (condition) { break }\n        }\n        setGrille(copy)\n    }\n\n\n    //faire grandir Emoji\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            // let copy = [...grille]\n            for (let i = 0; i < copy.length; i++) {\n                for (let j = 0; j < copy[i].length; j++) {\n                    if (copy[i][j] === \"ðŸŒ±\") {\n                        copy[i][j] = \"ðŸŒ¿\"\n                    }\n                }}\n                setGrille(copy)\n            }, 5000);\n    }, [addEmoji]);\n\n\n    //my garden\n    return (\n        <div className=\"d-flex flex-column align-items-center\">\n            <table className=\"garden mt-5\">\n                <tbody>\n                    {grille.map((row, i) => {\n                        return (\n                            <tr key={i}>\n                                {row.map((cell, j) => {\n                                    return <td key={j} onClick={() => handleRemoveEmoji(i, j)}>{cell}</td>;\n                                })}\n                            </tr>)\n                    })}\n                </tbody>\n            </table>\n            <button type=\"submit\" className=\"btn btn-primary mt-5\" onClick={addEmoji}>Plant an emoji</button>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}