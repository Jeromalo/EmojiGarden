{"ast":null,"code":"var _jsxFileName = \"/home/bjerome/Bureau/Matrice/bjerome-emojis-garden/emojisgarden/src/component/Garden.js\";\nimport React, { useState } from \"react\";\nimport './Garden.css';\nimport { useContext } from 'react';\nimport ThemeContext from \"../ThemeContext\";\nimport SpeedContext from \"../SpeedContext\";\nexport default function Garden(props) {\n  let Grille = [//0 //1 //2 //3 //4\n  ['', '', '', '', ''], //0\n  ['', '', '', '', ''], //1\n  ['', '', '', '', ''], //2\n  ['', '', '', '', ''], //3\n  ['', '', '', '', ''] //4\n  ];\n  const [grille, setGrille] = useState(Grille);\n  const theme = useContext(ThemeContext);\n  console.log(theme); //supprimer Emoji\n\n  const handleRemoveEmoji = (i, j) => {\n    let copy = [...grille];\n    copy[i][j] = '';\n    setGrille(copy);\n  }; //ajouter Emoji\n\n\n  const addEmoji = () => {\n    let copy = [...grille];\n\n    boucle: for (let i = 0; i < copy.length; i++) {\n      //déclarer une variable \"boucle\" pour break\n      for (let j = 0; j < copy[i].length; j++) {\n        if (copy[i][j] === \"\") {\n          //aller chercher position index [i], [j]\n          copy[i][j] = theme.emoji1;\n          setGrille(copy);\n          grow(i, j); //établir des paramètres i, j pour grow, qui seront des index dans la fonction.\n\n          break boucle;\n        }\n      }\n    }\n  }; //faire grandir Emoji\n\n\n  const grow = (i, j) => {\n    //créer une const qui se déclenchera pour chaque emoji crée dans le addEmoji\n    const timer = setTimeout(() => {\n      let copy = [...grille];\n\n      if (copy[i][j] === theme.emoji1) {\n        copy[i][j] = theme.emoji2;\n      }\n\n      setGrille(copy);\n      setTimeout(() => {\n        //inclure un setTimeout dans un setTimeout pour qu'il se déclenche à la suite du 1er\n        let copy2 = [...grille]; //par sécurité, déclarer nouvelle variable copy2\n\n        if (copy2[i][j] === theme.emoji2) {\n          copy2[i][j] = theme.emoji3;\n        }\n\n        setGrille(copy2);\n      }, 1500);\n    }, 1200);\n  }; //my garden(s)\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex flex-column align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"garden mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, grille.map((row, i) => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 29\n      }\n    }, row.map((cell, j) => {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        key: j,\n        onClick: () => handleRemoveEmoji(i, j),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 44\n        }\n      }, cell);\n    }));\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary mt-5\",\n    onClick: addEmoji,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, \"Plant an emoji\"));\n}","map":{"version":3,"sources":["/home/bjerome/Bureau/Matrice/bjerome-emojis-garden/emojisgarden/src/component/Garden.js"],"names":["React","useState","useContext","ThemeContext","SpeedContext","Garden","props","Grille","grille","setGrille","theme","console","log","handleRemoveEmoji","i","j","copy","addEmoji","boucle","length","emoji1","grow","timer","setTimeout","emoji2","copy2","emoji3","map","row","cell"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport './Garden.css';\nimport { useContext } from 'react';\nimport ThemeContext from \"../ThemeContext\"\nimport SpeedContext from \"../SpeedContext\";\n\nexport default function Garden(props) {\n    let Grille = [\n        //0 //1 //2 //3 //4\n        ['', '', '', '', ''], //0\n        ['', '', '', '', ''], //1\n        ['', '', '', '', ''], //2\n        ['', '', '', '', ''], //3\n        ['', '', '', '', ''] //4\n    ];\n\n    const [grille, setGrille] = useState(Grille);\n    const  theme  = useContext(ThemeContext);\n    console.log(theme)\n\n    //supprimer Emoji\n    const handleRemoveEmoji = (i, j) => {\n        let copy = [...grille]\n        copy[i][j] = ''\n        setGrille(copy)\n    }\n\n    //ajouter Emoji\n    const addEmoji = () => {\n        let copy = [...grille]\n        boucle: for (let i = 0; i < copy.length; i++) { //déclarer une variable \"boucle\" pour break\n            for (let j = 0; j < copy[i].length; j++) {\n                if (copy[i][j] === \"\") { //aller chercher position index [i], [j]\n                    copy[i][j] = theme.emoji1;\n                    setGrille(copy)\n                    grow(i, j) //établir des paramètres i, j pour grow, qui seront des index dans la fonction.\n                    break boucle\n                }\n            }\n        }\n    }\n\n\n    //faire grandir Emoji\n    const grow = (i, j) => { //créer une const qui se déclenchera pour chaque emoji crée dans le addEmoji\n        const timer = setTimeout(() => {\n            let copy = [...grille]\n            if (copy[i][j] === theme.emoji1) {\n                copy[i][j] = theme.emoji2\n            }\n            setGrille(copy)\n            setTimeout(() => { //inclure un setTimeout dans un setTimeout pour qu'il se déclenche à la suite du 1er\n                let copy2 = [...grille] //par sécurité, déclarer nouvelle variable copy2\n                if (copy2[i][j] === theme.emoji2) {\n                    copy2[i][j] = theme.emoji3\n                }\n                setGrille(copy2)\n            }, 1500);\n        }, 1200);\n    };\n\n\n    //my garden(s)\n    return (\n        <div className=\"d-flex flex-column align-items-center\">\n            <table className=\"garden mt-5\">\n                <tbody>\n                    {grille.map((row, i) => {\n                        return (\n                            <tr key={i}>\n                                {row.map((cell, j) => {\n                                    return <td key={j} onClick={() => handleRemoveEmoji(i, j)}>{cell}</td>;\n                                })}\n                            </tr>)\n                    })}\n                </tbody>\n            </table>\n            <button type=\"submit\" className=\"btn btn-primary mt-5\" onClick={addEmoji}>Plant an emoji</button>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}